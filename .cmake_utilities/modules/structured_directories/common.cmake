function(glob_source OUT_VARIABLE CXX_SOURCE_DIRECTORY)
    foreach (CXX_SOURCE_FILE_EXTENSION C c++ cc cpp cxx CPP)
        list(APPEND CXX_SOURCE_PATTERNS "${CXX_SOURCE_DIRECTORY}/*.${CXX_SOURCE_FILE_EXTENSION}")
    endforeach ()
    file(GLOB_RECURSE ${OUT_VARIABLE} ${CXX_SOURCE_PATTERNS})
    set(${OUT_VARIABLE} ${${OUT_VARIABLE}} PARENT_SCOPE)
endfunction()

function(glob_header OUT_VARIABLE CXX_HEADER_DIRECTORY)
    foreach (CXX_HEADER_FILE_EXTENSION H h++ hh hpp hxx HPP inl)
        list(APPEND CXX_HEADER_PATTERNS "${CXX_HEADER_DIRECTORY}/*.${CXX_HEADER_FILE_EXTENSION}")
    endforeach ()
    file(GLOB_RECURSE ${OUT_VARIABLE} ${CXX_HEADER_PATTERNS})
    set(${OUT_VARIABLE} ${${OUT_VARIABLE}} PARENT_SCOPE)
endfunction()

file(GLOB_RECURSE GLOB_PATHS "${CMAKE_SOURCE_DIR}/*.cmake")
foreach (GLOB_PATH ${GLOB_PATHS})
    get_filename_component(ABS_GLOB_PATH "${GLOB_PATH}" ABSOLUTE)
    get_filename_component(ABS_GLOB_NAME "${ABS_GLOB_PATH}" NAME)
    get_filename_component(ABS_GLOB_DIR "${ABS_GLOB_PATH}" DIRECTORY)
    get_filename_component(TARGET_NAME "${ABS_GLOB_DIR}" NAME)

    string(FIND "${ABS_GLOB_DIR}" ".cmake_utilities" POS)
    if (NOT POS EQUAL -1)
        continue()
    endif ()

    list(FIND STRUCTURED_DIRECTORIES_SKIP "${TARGET_NAME}" POS)
    if (NOT POS EQUAL -1)
        continue()
    endif ()

    if (ABS_GLOB_NAME STREQUAL "shared.cmake")
        list(APPEND SHARED_DIRS "${ABS_GLOB_DIR}")
    elseif (ABS_GLOB_NAME STREQUAL "static.cmake")
        list(APPEND STATIC_DIRS "${ABS_GLOB_DIR}")
    elseif (ABS_GLOB_NAME STREQUAL "header.cmake")
        list(APPEND HEADER_DIRS "${ABS_GLOB_DIR}")
    elseif (ABS_GLOB_NAME STREQUAL "executable.cmake")
        list(APPEND EXEC_DIRS "${ABS_GLOB_DIR}")
    elseif (BUILD_TESTING AND ABS_GLOB_NAME STREQUAL "tests.cmake")
        list(APPEND TEST_DIRS "${ABS_GLOB_DIR}")
    endif ()
endforeach ()
