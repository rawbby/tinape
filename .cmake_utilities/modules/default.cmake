include_guard(GLOBAL)

get_filename_component(MODULE_NAME "${CMAKE_CURRENT_LIST_FILE}" NAME_WE)
message("${PROJECT_NAME} - Added Module               ${MODULE_NAME}")

# Standard CMake output directory variables
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib" CACHE STRING "")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib" CACHE STRING "")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin" CACHE STRING "")

# Custom install directory variables (not in the CMake standard)
set(CMAKE_ARCHIVE_INSTALL_DIRECTORY "${CMAKE_INSTALL_PREFIX}/lib" CACHE STRING "Install destination for static libraries")
set(CMAKE_LIBRARY_INSTALL_DIRECTORY "${CMAKE_INSTALL_PREFIX}/lib" CACHE STRING "Install destination for shared libraries")
set(CMAKE_RUNTIME_INSTALL_DIRECTORY "${CMAKE_INSTALL_PREFIX}/bin" CACHE STRING "Install destination for executables")
set(CMAKE_INCLUDE_INSTALL_DIRECTORY "${CMAKE_INSTALL_PREFIX}/include" CACHE STRING "Install destination for headers")

# Also handle multi config generators
if (CMAKE_CONFIGURATION_TYPES)
    list(LENGTH CMAKE_CONFIGURATION_TYPES CMAKE_CONFIGURATION_TYPES_LENGTH)
    if (CMAKE_CONFIGURATION_TYPES_LENGTH EQUAL 1)
        string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_UPPER)

        # Standard CMake output directory variables
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_BINARY_DIR}/lib" CACHE STRING "")
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_BINARY_DIR}/lib" CACHE STRING "")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_BINARY_DIR}/bin" CACHE STRING "")

        # Custom install directory variables (not in the CMake standard)
        set(CMAKE_ARCHIVE_INSTALL_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/lib" CACHE STRING "Install destination for static libraries")
        set(CMAKE_LIBRARY_INSTALL_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/lib" CACHE STRING "Install destination for shared libraries")
        set(CMAKE_RUNTIME_INSTALL_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/bin" CACHE STRING "Install destination for executables")
        set(CMAKE_INCLUDE_INSTALL_DIRECTORY_${CMAKE_BUILD_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/include" CACHE STRING "Install destination for headers")
    else ()
        foreach (CMAKE_CONFIGURATION_TYPE ${CMAKE_CONFIGURATION_TYPES})
            string(TOLOWER "${CMAKE_CONFIGURATION_TYPE}" CMAKE_CONFIGURATION_TYPE_LOWER)
            string(TOUPPER "${CMAKE_CONFIGURATION_TYPE}" CMAKE_CONFIGURATION_TYPE_UPPER)

            # Standard CMake output directory variables
            set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_BINARY_DIR}/${CMAKE_CONFIGURATION_TYPE_LOWER}/lib" CACHE STRING "")
            set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_BINARY_DIR}/${CMAKE_CONFIGURATION_TYPE_LOWER}/lib" CACHE STRING "")
            set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_BINARY_DIR}/${CMAKE_CONFIGURATION_TYPE_LOWER}/bin" CACHE STRING "")

            # Custom install directory variables (not in the CMake standard)
            set(CMAKE_ARCHIVE_INSTALL_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/${CMAKE_CONFIGURATION_TYPE_LOWER}/lib" CACHE STRING "Install destination for static libraries")
            set(CMAKE_LIBRARY_INSTALL_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/${CMAKE_CONFIGURATION_TYPE_LOWER}/lib" CACHE STRING "Install destination for shared libraries")
            set(CMAKE_RUNTIME_INSTALL_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/${CMAKE_CONFIGURATION_TYPE_LOWER}/bin" CACHE STRING "Install destination for executables")
            set(CMAKE_INCLUDE_INSTALL_DIRECTORY_${CMAKE_CONFIGURATION_TYPE_UPPER} "${CMAKE_INSTALL_PREFIX}/${CMAKE_CONFIGURATION_TYPE_LOWER}/include" CACHE STRING "Install destination for headers")
        endforeach ()
    endif ()
endif ()

# Specify the C++ standard and required settings
set(CMAKE_CXX_STANDARD 20 CACHE INTERNAL "")
set(CMAKE_CXX_STANDARD_REQUIRED ON CACHE BOOL "")
set(CMAKE_CXX_EXTENSIONS OFF CACHE BOOL "")
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION ON CACHE BOOL "")

# Enable or disable building of test targets
option(BUILD_TESTING "Build Tests" OFF)
